# Form implementation generated from reading ui file 'app/resources/ui/window.ui'
#
# Created by: PyQt6 UI code generator 6.9.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from repository import EntryRepository

dateList = []
timeList = []
contentList = []
repository = EntryRepository()

with open("app/resources/style.qss", "r") as f:
        style = f.read()
        f.close()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(623, 700)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("app/resources/images/icon.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setStyleSheet(style)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.left_widget = QtWidgets.QWidget(parent=self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.left_widget.sizePolicy().hasHeightForWidth())
        self.left_widget.setSizePolicy(sizePolicy)
        self.left_widget.setMinimumSize(QtCore.QSize(128, 0))
        self.left_widget.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.left_widget.setStyleSheet(style)
        self.left_widget.setObjectName("left_widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.left_widget)
        self.verticalLayout.setSpacing(36)
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.btn_write = QtWidgets.QPushButton(parent=self.left_widget)
        self.btn_write.setMinimumSize(QtCore.QSize(0, 40))
        self.btn_write.setStyleSheet("")
        self.btn_write.setObjectName("btn_write")
        self.verticalLayout.addWidget(self.btn_write)
        self.btn_read = QtWidgets.QPushButton(parent=self.left_widget)
        self.btn_read.setMinimumSize(QtCore.QSize(0, 40))
        self.btn_read.setStyleSheet("")
        self.btn_read.setObjectName("btn_read")
        self.verticalLayout.addWidget(self.btn_read)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem1)
        self.horizontalLayout.addWidget(self.left_widget)
        self.right_widget = QtWidgets.QWidget(parent=self.centralwidget)
        self.right_widget.setStyleSheet(style)
        self.right_widget.setObjectName("right_widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.right_widget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.main_stack = QtWidgets.QStackedWidget(parent=self.right_widget)
        self.main_stack.setObjectName("main_stack")
        self.page_write = QtWidgets.QWidget()
        self.page_write.setObjectName("page_write")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.page_write)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_write_title = QtWidgets.QLabel(parent=self.page_write)
        font = QtGui.QFont()
        font.setFamily("Kristen ITC")
        font.setPointSize(26)
        self.label_write_title.setFont(font)
        self.label_write_title.setObjectName("label_write_title")
        self.verticalLayout_5.addWidget(self.label_write_title)
        self.widget_2 = QtWidgets.QWidget(parent=self.page_write)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.widget_2.setFont(font)
        self.widget_2.setObjectName("widget_2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_2)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.widget_5 = QtWidgets.QWidget(parent=self.widget_2)
        self.widget_5.setObjectName("widget_5")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.widget_5)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.dateEdit = QtWidgets.QDateEdit(parent=self.widget_5)
        self.dateEdit.setCalendarPopup(True)
        self.dateEdit.setObjectName("dateEdit")
        self.horizontalLayout_4.addWidget(self.dateEdit)
        self.timeEdit = QtWidgets.QTimeEdit(parent=self.widget_5)
        self.timeEdit.setCalendarPopup(True)
        self.timeEdit.setObjectName("timeEdit")
        self.horizontalLayout_4.addWidget(self.timeEdit)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem2)
        self.verticalLayout_4.addWidget(self.widget_5)
        self.plainTextEdit = QtWidgets.QPlainTextEdit(parent=self.widget_2)
        font = QtGui.QFont()
        font.setFamily("Kristen ITC")
        font.setPointSize(-1)
        self.plainTextEdit.setFont(font)
        self.plainTextEdit.setPlainText("")
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.verticalLayout_4.addWidget(self.plainTextEdit)
        self.widget_3 = QtWidgets.QWidget(parent=self.widget_2)
        self.widget_3.setObjectName("widget_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.widget_3)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.btn_write_clear = QtWidgets.QPushButton(parent=self.widget_3)
        self.btn_write_clear.setMinimumSize(QtCore.QSize(32, 32))
        self.btn_write_clear.setMaximumSize(QtCore.QSize(220, 32))
        self.btn_write_clear.setObjectName("btn_write_clear")
        self.horizontalLayout_3.addWidget(self.btn_write_clear)
        self.btn_local_date = QtWidgets.QPushButton(parent=self.widget_3)
        self.btn_local_date.setMinimumSize(QtCore.QSize(32, 32))
        self.btn_local_date.setMaximumSize(QtCore.QSize(220, 32))
        self.btn_local_date.setObjectName("btn_local_date")
        self.horizontalLayout_3.addWidget(self.btn_local_date)
        self.btn_write_save = QtWidgets.QPushButton(parent=self.widget_3)
        self.btn_write_save.setMinimumSize(QtCore.QSize(32, 32))
        self.btn_write_save.setMaximumSize(QtCore.QSize(220, 32))
        self.btn_write_save.setObjectName("btn_write_save")
        self.horizontalLayout_3.addWidget(self.btn_write_save)
        self.verticalLayout_4.addWidget(self.widget_3)
        self.verticalLayout_4.setStretch(0, 1)
        self.verticalLayout_4.setStretch(1, 12)
        self.verticalLayout_4.setStretch(2, 1)
        self.verticalLayout_5.addWidget(self.widget_2)
        self.main_stack.addWidget(self.page_write)
        self.page_read = QtWidgets.QWidget()
        self.page_read.setObjectName("page_read")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.page_read)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_read_title = QtWidgets.QLabel(parent=self.page_read)
        font = QtGui.QFont()
        font.setFamily("Kristen ITC")
        font.setPointSize(26)
        font.setUnderline(False)
        self.label_read_title.setFont(font)
        self.label_read_title.setObjectName("label_read_title")
        self.verticalLayout_3.addWidget(self.label_read_title)
        self.widget = QtWidgets.QWidget(parent=self.page_read)
        self.widget.setObjectName("widget")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.read_stackWidget = QtWidgets.QStackedWidget(parent=self.widget)
        self.read_stackWidget.setObjectName("read_stackWidget")
        self.verticalLayout_8.addWidget(self.read_stackWidget)
        self.verticalLayout_3.addWidget(self.widget)
        self.widget_6 = QtWidgets.QWidget(parent=self.page_read)
        self.widget_6.setObjectName("widget_6")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.widget_6)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.read_previous_page = QtWidgets.QPushButton(parent=self.widget_6)
        self.read_previous_page.setMinimumSize(QtCore.QSize(0, 32))
        self.read_previous_page.setObjectName("read_previous_page")
        self.horizontalLayout_5.addWidget(self.read_previous_page)
        self.btn_delete = QtWidgets.QPushButton(parent=self.widget_6)
        self.btn_delete.setMinimumSize(QtCore.QSize(0, 40))
        self.btn_delete.setStyleSheet("")
        self.btn_delete.setObjectName("btn_delete")
        self.horizontalLayout_5.addWidget(self.btn_delete)
        self.read_next_page = QtWidgets.QPushButton(parent=self.widget_6)
        self.read_next_page.setEnabled(True)
        self.read_next_page.setMinimumSize(QtCore.QSize(0, 32))
        self.read_next_page.setObjectName("read_next_page")
        self.horizontalLayout_5.addWidget(self.read_next_page)
        self.verticalLayout_3.addWidget(self.widget_6)
        self.verticalLayout_3.setStretch(0, 1)
        self.verticalLayout_3.setStretch(1, 14)
        self.verticalLayout_3.setStretch(2, 1)
        self.main_stack.addWidget(self.page_read)
        self.verticalLayout_2.addWidget(self.main_stack)
        self.horizontalLayout.addWidget(self.right_widget)
        self.horizontalLayout.setStretch(0, 1)
        self.horizontalLayout.setStretch(1, 4)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.main_stack.setCurrentIndex(0)
        self.read_stackWidget.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

# ====================================
#       METHODS AND INITIALIZATION
# ====================================
        self.dateEdit.setDate(QtCore.QDate.currentDate())
        self.dateEdit.setDisplayFormat("yyyy/MM/dd")
        
        print(self.dateEdit.date().toString("yyyy-MM-dd").split("-"))
        
        self.timeEdit.setTime(QtCore.QTime.currentTime())
        self.timeEdit.setDisplayFormat("hh:mm AP")
        
        self.btn_write.clicked.connect(self.writePage)
        self.btn_read.clicked.connect(self.readPage)
        self.btn_write_clear.clicked.connect(self.clearEntry)
        self.btn_local_date.clicked.connect(self.setLocalDate)
        self.read_next_page.clicked.connect(self.read_goToNextPage)
        self.read_previous_page.clicked.connect(self.read_goToPreviousPage)
        self.btn_write_save.clicked.connect(self.saveEntry)
        self.btn_delete.clicked.connect(self.deleteEntry)
        
        self.initializeEntries()
        
# ===== SWITCHING BETWEEN CONTENT =====
    def writePage(self):
        self.main_stack.setCurrentIndex(0)
    def readPage(self):
        self.main_stack.setCurrentIndex(1)
# ========================================
    
# ===== ACTION BUTTONS =====
    def saveEntry(self):
        text = self.plainTextEdit.toPlainText().strip()
        if not text:
            self.show_textfield_empty()
        else:
            self.add_entry()
            self.clearEntry()
            self.show_success_dialog("Entry added to the journal!")
                
    def deleteEntry(self):
        self.main_stack.setCurrentIndex(1)
            
        if self.read_stackWidget.count() == 0:
            self.show_empty_journal()
            return
        if self.show_delete_warning():
            
            index = self.show_input_dialog()
            
            repository.deleteData(index)
            self.initializeEntries()
            self.show_success_dialog("Deletion successful!")
                
    def clearEntry(self):
        self.plainTextEdit.setPlainText("")
        
    def setLocalDate(self):
        self.dateEdit.setDate(QtCore.QDate.currentDate())
        self.timeEdit.setTime(QtCore.QTime.currentTime())
        
    def add_entry(self):
        date = self.dateEdit.date().toString("yyyy-MM-dd")
        time = self.timeEdit.time().toString("hh:mm AP")
        content = self.plainTextEdit.toPlainText()
        
        dateList.append(date)
        timeList.append(time)
        contentList.append(content)
        
        repository.insertData(date, time, content)
        
        #text = QtWidgets.QTextBrowser()
        #text.setPlainText(f"{date} | {time}\n\n {content}")
        #text.setStyleSheet(style)
        #text.adjustSize()
        
        #index = self.read_stackWidget.addWidget(text)
        #self.read_stackWidget.setCurrentIndex(index)
        self.initializeEntries()
        
    def initializeEntries(self):
        entries = repository.readData()
        while self.read_stackWidget.count() > 0:
            widget = self.read_stackWidget.widget(0)
            self.read_stackWidget.removeWidget(widget)
            widget.deleteLater()
            
        for i in entries:
            text = QtWidgets.QTextBrowser()
            text.setPlainText(f"ENTRY #{i[0]} | {i[1]} | {i[2]}\n\n {i[3]}")
            text.setStyleSheet(style)
            text.adjustSize()
            
            index = self.read_stackWidget.addWidget(text)
            self.read_stackWidget.setCurrentIndex(index)
# ========================================    
        
# ===== READ NEXT AND PREVIOUS PAGES =====
    def read_goToNextPage(self):
        currentIndex = self.read_stackWidget.currentIndex()
        maxIndex = self.read_stackWidget.count()
        if currentIndex < maxIndex:
            self.read_stackWidget.setCurrentIndex(currentIndex + 1)
        
    def read_goToPreviousPage(self):
        currentIndex = self.read_stackWidget.currentIndex()
        if currentIndex > 0:
            self.read_stackWidget.setCurrentIndex(currentIndex - 1)
# ======================================== 
        
# ===== DIALOG POPUPS =====
    def show_input_dialog(self) -> int:
        num, ok = QtWidgets.QInputDialog.getInt(None, "Enter a Number", "Please enter an integer:")
        return num
    def show_delete_warning(self):
        msg = QtWidgets.QMessageBox(parent=None)
        msg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
        msg.setWindowTitle("Delete Confirmation")
        msg.setText(f"Are you sure you want to delete an entry?")
        msg.setStandardButtons(QtWidgets.QMessageBox.StandardButton.Yes | QtWidgets.QMessageBox.StandardButton.No)
        msg.setDefaultButton(QtWidgets.QMessageBox.StandardButton.No)
        result = msg.exec()
        return result == QtWidgets.QMessageBox.StandardButton.Yes
    def show_empty_journal(self):
        msg = QtWidgets.QMessageBox(parent=None)
        msg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
        msg.setWindowTitle("Empty")
        msg.setText(f"The journal is currently empty!")
        msg.setStandardButtons(QtWidgets.QMessageBox.StandardButton.Ok)
        msg.exec()
    def show_success_dialog(self, text: str):
        msg = QtWidgets.QMessageBox(parent=None)
        msg.setIcon(QtWidgets.QMessageBox.Icon.Information)
        msg.setWindowTitle("Success")
        msg.setText(text)
        msg.setStandardButtons(QtWidgets.QMessageBox.StandardButton.Ok)
        msg.exec()
    def show_textfield_empty(self):
        msg = QtWidgets.QMessageBox(parent=None)
        msg.setIcon(QtWidgets.QMessageBox.Icon.Critical)
        msg.setWindowTitle("ERROR")
        msg.setText("The journal entry cannot be left empty!")
        msg.setStandardButtons(QtWidgets.QMessageBox.StandardButton.Ok)
        msg.exec()

# ====================================
#                END
# ====================================

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "My Daily Journal"))
        self.btn_write.setText(_translate("MainWindow", "Write"))
        self.btn_read.setText(_translate("MainWindow", "Read"))
        self.label_write_title.setText(_translate("MainWindow", "Write your entry!  ૮ ˶ᵔ ᵕ ᵔ˶ ა "))
        self.plainTextEdit.setPlaceholderText(_translate("MainWindow", "Click here and talk about your day!"))
        self.btn_write_clear.setText(_translate("MainWindow", "Clear"))
        self.btn_local_date.setText(_translate("MainWindow", "Set Date"))
        self.btn_write_save.setText(_translate("MainWindow", "Save"))
        self.label_read_title.setText(_translate("MainWindow", "Read your entries~ ദ്ദി ˉ͈̀꒳ˉ͈́ )✧"))
        self.read_previous_page.setText(_translate("MainWindow", "<<<"))
        self.read_previous_page.setShortcut(_translate("MainWindow", "Left, A"))
        self.btn_delete.setText(_translate("MainWindow", "Delete"))
        self.read_next_page.setText(_translate("MainWindow", ">>>"))
        self.read_next_page.setShortcut(_translate("MainWindow", "Right, D"))

def openWindow():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())

if __name__ == "__main__":
    openWindow()
